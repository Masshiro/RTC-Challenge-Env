# Use Ubuntu 20.04 as the base image
FROM ubuntu:20.04
ARG TARGETARCH
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies
RUN ln -fs /usr/share/zoneinfo/America/Vancouver /etc/localtime && \
    echo "America/Vancouver" > /etc/timezone && \
    apt-get update && apt-get install -y \
    curl \
    git \
    python3 \
    python3-pip \
    python3-setuptools \
    python3-venv \
    git \
    curl \
    mahimahi \
    tzdata \
    iputils-ping \
    lsb-release \
    wget \
    build-essential \
    ninja-build \
    cmake \
    unzip \
    clang \
    gnupg \
    pkg-config \
    libgtk-3-dev \
    libnss3-dev \
    libgconf-2-4 \
    libasound2-dev \
    libpulse-dev \
    libxcomposite-dev \
    libxrandr-dev \
    libxi-dev \
    libxcursor-dev \
    libxtst-dev \
    libxdamage-dev \
    libpci-dev \
    libudev-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install depot_tools
RUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git /opt/depot_tools
RUN ln -s /usr/bin/python3 /usr/bin/python
ENV PATH="/opt/depot_tools:${PATH}"

# Clone AlphaRTC
RUN git clone https://github.com/OpenNetLab/AlphaRTC.git /AlphaRTC
WORKDIR /AlphaRTC

# Fetch WebRTC source code
RUN cd /AlphaRTC && \
    gclient sync && \
    mv src/* . && \
    rm -rf src

# Build and organize files as per build_serverless.sh
RUN output_dir="out/Default" && \
    target_dir="target" && \
    target_lib_dir="${target_dir}/lib" && \
    target_bin_dir="${target_dir}/bin" && \
    target_pylib_dir="${target_dir}/pylib" && \
    \
    # Clean existing directories
    rm -rf "${output_dir}" "${target_dir}" && \
    \
    # Build process
    gn gen "${output_dir}" && \
    ninja -C "${output_dir}" peerconnection_serverless && \
    \
    # Create target directories
    mkdir -p "${target_lib_dir}" "${target_bin_dir}" "${target_pylib_dir}" && \
    \
    # Copy files and libraries
    cp -r examples/peerconnection/serverless/corpus/* "${target_bin_dir}" && \
    cp modules/third_party/onnxinfer/lib/*.so "${target_lib_dir}" && \
    cp modules/third_party/onnxinfer/lib/*.so.* "${target_lib_dir}" && \
    cp "${output_dir}/peerconnection_serverless" "${target_bin_dir}/peerconnection_serverless.origin" && \
    cp examples/peerconnection/serverless/peerconnection_serverless "${target_bin_dir}" && \
    cp modules/third_party/cmdinfer/*.py "${target_pylib_dir}/" && \
    \
    echo "Build and file organization completed."

# Install Python libraries and tools
RUN apt-get update && apt-get install -y \
    ffmpeg python3-pip wget unzip gocr imagemagick

RUN pip3 install pytest numpy requests soundfile

# Install vmaf
RUN wget https://github.com/Netflix/vmaf/releases/download/v2.1.0/ubuntu-18.04-vmaf.zip
RUN unzip -o ubuntu-18.04-vmaf.zip && chmod 774 vmaf && mv vmaf /usr/bin && rm ubuntu-18.04-vmaf.zip

# Install AI and ML tools
RUN pip3 install gym torch protobuf==3.6.1 tensorflow==1.8.0

# Default to bash
CMD ["/bin/bash"]